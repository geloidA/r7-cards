@using Microsoft.FluentUI.AspNetCore.Components
@inherits LayoutComponentBase

@implements IDisposable

<FluentToastProvider />

<FluentLayout>
    <AuthorizeView>
        <Authorized>
            <Header />
        </Authorized>
    </AuthorizeView>
    <FluentStack Orientation="Orientation.Horizontal" Width="100%">
        <FluentBodyContent style="@CssPadding" >
            <ErrorBoundary>
                <ChildContent>
                    <div class="content">
                        <article>
                            @Body
                            <FluentTooltipProvider />
                        </article>
                    </div>
                </ChildContent>
                <ErrorContent Context="ex">
                    <div class="blazor-error-boundary">@ex.Message</div>
                </ErrorContent>
            </ErrorBoundary>
        </FluentBodyContent>
    </FluentStack>
</FluentLayout>

@code {
    [CascadingParameter] HeaderInteractionService InteractionService { get; set; } = null!;

    private string CssPadding => InteractionService.HeaderCollapsed ? "height: 100vh;" : "height: 100vh; padding-bottom: 3rem;";

    protected override void OnInitialized()
    {
        InteractionService.HeaderCollapsedChanged += StateHasChanged;
    }

    public void Dispose()
    {
        InteractionService.HeaderCollapsedChanged -= StateHasChanged;
    }
}