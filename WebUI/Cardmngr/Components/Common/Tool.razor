@using Microsoft.FluentUI.AspNetCore.Components
@inherits KolComponentBase

@if (TooltipTitle is { })
{
    <div id="@tooltipGuid.ToString()" class="d-flex align-items-center tool @Class @СssDisabled" style="@Style" @onclick="OnClickHandler">
        <FluentIcon Value="Icon" Color="Color"/>
        @if (Text is { })
        {
            <div class="ms-1">@Text</div>
        }
    </div>
    <FluentTooltip Anchor="@tooltipGuid.ToString()" >
        @(Disabled ? DisabledTitle : TooltipTitle)
    </FluentTooltip>
}
else
{
    <div class="d-flex justify-content-center align-items-center tool @Class @СssDisabled" style="@Style" @onclick="OnClickHandler">
        <FluentIcon Value="Icon" Color="Color"/>
        @if (Text is { })
        {
            <div class="ms-1">@Text</div>
        }
    </div>
}

@code {
    private readonly Guid tooltipGuid = Guid.NewGuid();
    private string СssDisabled => Disabled ? "disabled" : "";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string DisabledTitle { get; set; } = "Недоступно";
    [Parameter] public Icon Icon { get; set; }
    [Parameter] public Color? Color { get; set; }
    [Parameter] public string? Text { get; set; }
    [Parameter] public string? TooltipTitle { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }

    private async Task OnClickHandler(MouseEventArgs args)
    {
        if (OnClick.HasDelegate && !Disabled)
        {
            await OnClick.InvokeAsync(args);
        }
    }
}
