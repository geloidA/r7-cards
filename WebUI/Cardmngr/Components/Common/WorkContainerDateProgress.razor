<div class="d-flex flex-column w-100">
    <Progress Class="user-select-none">            
        @if (Closed)
        {
            <ProgressBar Width="100" Type="ProgressType.StripedAndAnimated" Color="ProgressColor.Success"
                Label="@ClosedText" />
        } else if (IsNowBetween())
        {
            <ProgressBar Width="Start.CountDaysTo(DateTime.Now) * DayProcentage" 
                Type="ProgressType.StripedAndAnimated" Label="@((TotalWorks - ActiveWorks).ToString())" />
            <ProgressBar Width="DateTime.Now.CountDaysTo(Deadline) * DayProcentage" 
                Label="@ActiveWorks.ToString()" Color="ProgressColor.Info" />
        }
        else if (DeadlineOut)
        {
            <ProgressBar Width="100" Type="ProgressType.StripedAndAnimated" Color="ProgressColor.Danger"
                Label="@ActiveWorks.ToString()" />
        }
    </Progress>
    <div class="d-flex justify-content-center w-100 small">
        @RenderDate(Start)
        <div class="col d-flex justify-content-end">
            @RenderDate(Deadline)
        </div>
    </div>
</div>

@code {

    private float DayProcentage => 100.0f / (float)(Deadline - Start)!.Value.TotalDays;

    [Parameter, EditorRequired] public DateTime? Start { get; set; }
    [Parameter, EditorRequired] public DateTime? Deadline { get; set; }

    protected override void OnParametersSet()
    {
        if (Start > Deadline)
        {
            throw new ArgumentException("Start can't be greater then Deadline");
        }
    }

    [Parameter] public bool DeadlineOut { get; set; }
    [Parameter] public bool Closed { get; set; }
    [Parameter] public string ClosedText { get; set; } = "Закрыта";

    [Parameter] public int ActiveWorks { get; set; }
    [Parameter] public int TotalWorks { get; set; }

    private bool IsNowBetween()
    {
        return DateTime.Now > Start && DateTime.Now < Deadline;
    }

    private static RenderFragment<DateTime?> RenderDate = date =>
        @<span>
            @if (date is { })
            {
                @date.Value.ToShortDateString()
            }
            else
            {
                <i>???</i>
            }
        </span>;
}