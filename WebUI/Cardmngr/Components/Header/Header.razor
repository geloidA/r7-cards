@inject IProjectApi ProjectApi
@inject AuthenticationStateProvider AuthenticationState

@using System.Text.Json

<div class="bb-top-row px-4 d-flex" style="background-color: var(--main-col-bg);">
    <div class="col-md-1 d-flex justify-content-start">
        <Button class="py-0" Color="ButtonColor.Dark" Outline="true" @onclick="OpenSidebar" >
            <Icon Name="IconName.List" />
        </Button>
    </div>
    <div class="col-md-9">
        @if (userProjects is { })
        {
            <ProjectNavigator Projects="userProjects" />
        }
    </div>
    <div class="col-md-2 d-flex justify-content-end">
        <Toolbar />
        @if (currentUser is { })
        {
            <ProfileTool Class="ms-3" UserProfile="currentUser" />
        }
    </div>
</div>

@code {
    private List<Project> userProjects = null!;
    private UserProfile? currentUser;

    [CascadingParameter(Name = "DetailsModal")] ModalOptions Options { get; set; } = null!;
    [CascadingParameter] IModalService Modal { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {        
        @* userProjects = await ProjectApi.GetUserProjectsAsync().ToListAsync(); *@

        if (AuthenticationState is { })
        {
            var provider = AuthenticationState.ToCookieProvider();
            currentUser = JsonSerializer.Deserialize<UserProfile>(provider["Data"]);
        }
    }

    private async Task OpenSidebar()
    {
        await Modal.Show<HeaderMenuModal>("", new ModalParameters { { "UserProjects", userProjects } }, Options).Result;
    }
}
