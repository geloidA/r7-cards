@inject NavigationManager NavigationManager
@inject IProjectClient ProjectClient

@inherits KolComponentBase

@if (showTitle)
{
    <FluentButton Id="btn-pj-nav" @onclick="() => openPopover = !openPopover" Appearance="Appearance.Outline" >
        @selectedProjectTitle
    </FluentButton>

    <FluentPopover Style="width: 500px; height: 150px; border-radius: 5px;" 
        AnchorId="btn-pj-nav" @bind-Open="openPopover" class="overflow-auto" >
        <Body>
            <FluentGrid Spacing="1">
                @foreach (var project in projectsByIds.Values)
                {
                    <FluentGridItem>
                        <FluentAnchor OnClick="() => openPopover = !openPopover" 
                            Appearance="Appearance.Stealth" title="@project.Title"
                            Style="max-width: 450px;" Class="overflow-hidden"
                            Href="@($"/project/{project.Id}")">
                            @project.Title
                        </FluentAnchor>
                    </FluentGridItem>
                }
            </FluentGrid>            
        </Body>
    </FluentPopover>
}

@code {
    bool openPopover;
    Dictionary<int, Project> projectsByIds = [];
    bool showTitle;
    string? selectedProjectTitle;

    protected override async Task OnInitializedAsync()
    {
        projectsByIds = (await ProjectClient
            .GetSelfProjectsAsync()
            .ToListAsync())
            .ToDictionary(x => x.Id, x => x);

        UpdateStateByLocation(NavigationManager.Uri);
        NavigationManager.LocationChanged += (_, args) => UpdateStateByLocation(args.Location);
    }

    private void UpdateStateByLocation(string uri)
    {
        showTitle = IsProjectUri(uri);
        if (showTitle)
        {
            var projectInfo = projectsByIds[GetIdByUrl(uri)];
            selectedProjectTitle = projectInfo.Title;
        }
        StateHasChanged();
    }

    private static bool IsProjectUri(string uri)
    {
        return uri.Contains("/project/");
    }

    private static int GetIdByUrl(string uri)
    {
        var lastSlashIndex = uri.LastIndexOf('/');
        return int.Parse(uri.Substring(lastSlashIndex + 1));
    }
}
