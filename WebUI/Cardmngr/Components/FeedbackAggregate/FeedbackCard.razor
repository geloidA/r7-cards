@using Cardmngr.Application.Clients.FeedbackClient
@using Cardmngr.Components.FeedbackAggregate.Modals

@inject IFeedbackClient FeedbackClient
@inject AuthenticationStateProvider AuthenticationStateProvider

<Smooth ShowOnFirstRender >
    <div class="feedback-card cursor-pointer" style="font-size: 13px;" @onclick="openModalFunc" >
        <div class="py-1 px-2 h-full" >
            <span class="font-bold title max-height-100 whitespace-pre-wrap" >@Feedback.Title</span>
            <div class="mt-1 max-height-100 font-light whitespace-pre-wrap" style="min-height: 20px;">
                @Feedback.Description
            </div>
            <UserAvatar User="@Feedback.Creator" Size="20" ShowName="true" />
            <div class="mt-2 flex" style="max-height: 20px;">
                @if (Feedback.Status == FeedbackStatus.Todo)
                {
                    <FluentBadge @onclick:stopPropagation>
                        <div class="flex self-center" @onclick="ToggleLike" >
                            <FluentIcon Value="@(new Icons.Filled.Size16.ThumbLike())" 
                                Color="@(likePressed ? Color.Success : Color.Info)" />
                            <span class="ms-1">@Feedback.LikedUsers.Count</span>
                        </div>

                        <div class="flex self-center ms-2" @onclick="ToggleDislike">
                            <FluentIcon Value="@(new Icons.Filled.Size16.ThumbDislike())" 
                                Color="@(dislikePressed ? Color.Error : Color.Info)" />
                            <span class="ms-1">@Feedback.DislikedUsers.Count</span>
                        </div>
                    </FluentBadge>
                }
                <FluentSpacer />
                <div class="flex">
                    @if (Feedback.Status == FeedbackStatus.Finished)
                    {
                        <FluentIcon class="flex items-center" 
                            Value="@(new Icons.Filled.Size16.CheckmarkCircle())" Color="Color.Success" />
                        <span class="ms-1">
                            Выполнено:
                            @Feedback.Finished!.Value.ToShortDateString()
                        </span>
                    }
                    else
                    {
                        <FluentIcon class="flex items-center" 
                            Value="@(new Icons.Regular.Size16.DocumentEdit())" Color="Color.Accent" />
                        <span class="ms-1">
                            Создано:
                            @Feedback.Created.ToShortDateString()
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
</Smooth>
