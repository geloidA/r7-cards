@using Cardmngr.Shared.Feedbacks

@inherits AddEditModalBase<Feedback, FeedbackUpdateData>

@if (buffer is { })
{
    <Cardmngr.Components.Modals.MyBlazored.Offcanvas Placement="MyOffcanvasPlacement.End" Class="my-offcanvas my-offcanvas-right" 
        @ref="currentModal">
        <EditForm Model="buffer" OnValidSubmit="SubmitAsync" >
            <FluentValidationValidator ValidatorType="@(typeof(FeedbackUpdateDataValidator))" />
            <OffcanvasHeader Class="py-0" Style="padding-top: 20px !important;">
                <TitleChanger Disabled="@(!CanEdit)" @bind-Title="@buffer.Title" />
            </OffcanvasHeader>
            <ValidationMessage For="() => buffer.Title" class="ms-3 validation-msg" />
            <OffcanvasBody Class="d-flex flex-column">
                <DescriptionChanger Disabled="@(!CanEdit)" Class="mt-2" @bind-Description="@buffer.Description" />
            </OffcanvasBody>
            @if (!IsAdd)
            {
                <div class="mt-2 px-3">
                    <UserBadge User="Model!.Creator" Title="Создатель" />
                </div>
            }
            <div class="d-flex ms-3 flex-row">
                <Button
                    Size="Size.Small" Disabled="@(!CanEdit)" Type="ButtonType.Submit" 
                    Color="ButtonColor.Success" Outline="true" >
                    @SubmitText
                </Button>
                @if (!IsAdd)
                {
                    <Button class="ms-2" Size="Size.Small" Disabled="@(!CanEdit)" Color="ButtonColor.Danger"
                            @onclick="DeleteAsync"
                            Outline="true" >
                            Удалить
                    </Button>
                }
            </div>
        </EditForm>
    </Cardmngr.Components.Modals.MyBlazored.Offcanvas>
}
