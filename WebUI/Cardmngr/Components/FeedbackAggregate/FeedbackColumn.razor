<div class="feedback-col">
    <KolBoardColumn TValue="Feedback" OnDropItem="DropFeedback" Items="Items">
        <HeaderTemplate>
            <div class="row w-100">
                <div class="col col-sm-1">
                    <Badge Color="BadgeColor.Danger">@Items.Count()</Badge>
                </div>
                <div class="col">                    
                    @HeaderTemplate
                </div>
            </div>
        </HeaderTemplate>
    </KolBoardColumn>
</div>

@code {
    private IEnumerable<Feedback> Items => State.Model!.Feedbacks.Where(x => x.Status == Status);

    [Parameter] public RenderFragment? HeaderTemplate { get; set; }
    [Parameter, EditorRequired] public FeedbackStatus Status { get; set; }

    [CascadingParameter] FeedbacksState State { get; set; } = null!;

    private async Task DropFeedback(Feedback dropped)
    {
        await State.UpdateFeedbackStatusAsync(dropped.Id, Status);
    }
}
