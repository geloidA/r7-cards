@using Onlyoffice.Api.Models

@inherits CreationModalBase


<div class="flex flex-col gap-5">
    <div class="font-bold text-3xl ">
        @(IsEdit ? "Изменение подзадачи" : "Создание подзадачи")
    </div>
    <AutoGrowTextArea Placeholder="Название" Maxlength="255" @bind-Value="subtask.Title" />
    <FluentAutocomplete TOption="UserInfo" MaximumSelectedOptions="1"
                    MaximumOptionsSearch="100"
                    @bind-SelectedOptions="Responsible" Context="user" AutoComplete="off"
                    OnOptionsSearch="OnSearchResponsible" Placeholder="Не установлен">

            <LabelTemplate>
                Ответственный
                <FluentIcon Value="@(new Icons.Regular.Size20.Person())" Style="margin: 0 4px;" />
            </LabelTemplate>

            <SelectedOptionTemplate>
                <FluentPersona Name="@user.DisplayName" 
                    ImageSize="22px"
                    Class="p-1"
                    Style="height: 26px; background: var(--main-responsibles-bg)"
                    Image="@($"onlyoffice/api/people{user.AvatarSmall}")" />
            </SelectedOptionTemplate>

            <OptionTemplate>
                <FluentPersona Name="@user.DisplayName"
                    ImageSize="22px"
                    Image="@($"onlyoffice/api/people{user.AvatarSmall}")" />
            </OptionTemplate>

            <HeaderContent>
                <FluentLabel Color="Color.Accent"
                    Style="padding: 8px; font-size: 11px; border-bottom: 1px solid var(--neutral-fill-stealth-hover);">
                    Команда проекта
                </FluentLabel>
            </HeaderContent>

            <FooterContent>
                @if (!user.Any())
                {
                    <FluentLabel Style="font-size: 11px; text-align: center; width: 200px;">
                        Нет результатов
                    </FluentLabel>
                }
            </FooterContent>
    </FluentAutocomplete>
</div>
<div class="mt-5 flex justify-end">
    <FluentButton Class="mr-2 font-bold" OnClick="Cancel" Appearance="Appearance.Stealth" >Отмена</FluentButton>
    <FluentButton Type="ButtonType.Submit" Class="font-bold" OnClick="SubmitCreate" 
        Disabled="string.IsNullOrWhiteSpace(subtask.Title)"
        Color="white" BackgroundColor="@CardmngrColors.Success" >
        @(IsEdit ? "Изменить" : "Создать")
    </FluentButton>
</div>

@code {
    private readonly SubtaskUpdateData subtask = new();

    protected override void OnInitialized()
    {
        subtask.Responsible = ResponsibleId;
        subtask.Title = Title;
    }

    [Parameter] public string? Title { get; set; }

    [Parameter] public string? ResponsibleId { get; set; }

    [Parameter] public bool IsEdit { get; set; }

    [Parameter] public IEnumerable<UserInfo> Team { get; set; } = null!;

    public IEnumerable<UserInfo?> Responsible
    {
        get => subtask.Responsible is not null
            ? [Team.First(x => x.Id == subtask.Responsible)] 
            : [];
        set => subtask.Responsible = value.FirstOrDefault()?.Id;
    }

    private void OnSearchResponsible(OptionsSearchEventArgs<UserInfo> e)
    {
        e.Items = Team.Where(x => x.DisplayName.StartsWith(e.Text, StringComparison.OrdinalIgnoreCase));
    }

    protected override async Task SubmitCreate() => await BlazoredModal.CloseAsync(ModalResult.Ok(subtask)).ConfigureAwait(false);
}
