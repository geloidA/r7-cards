
<EditForm Model="Subtask" OnValidSubmit="Submit" >
    <DataAnnotationsValidator/>
    <div class="row d-flex align-items-center mt-2">
        <div class="col d-flex flex-row align-items-center overflow-hidden">
            @if (Subtask.Status == (int)Status.Open)
            {
                <Tool IconName="IconName.ClockFill" IconColor="IconColor.Info" 
                    IconSize="IconSize.x5" TooltipPlacement="TooltipPlacement.Left"
                    TooltipTitle="Отметить выполненым" Disabled="@Disabled"
                    OnClick="@SwitchSubtaskStatus" />
                @if (isEditMode)
                {
                    <div class="d-flex w-100 flex-column">
                        <input class="ms-2 w-100 form-control" @bind="Subtask.Title" />
                        <ValidationMessage For="() => Subtask.Title" style="font-size: x-small;" class="ms-2 validation-msg" />
                    </div>
                }
                else
                {
                    <span class="ms-1" style="font-size: 15px;">@Subtask.Title</span>
                }
            }
            else
            {
                <Tool IconName="IconName.CheckCircleFill" IconColor="IconColor.Success" 
                    IconSize="IconSize.x5" TooltipPlacement="TooltipPlacement.Left"
                    TooltipTitle="Отметить невыполненым" Disabled="@(Task.IsClosed() || Disabled)"
                    OnClick="@SwitchSubtaskStatus" DisabledTitle="@(Task.IsClosed() ? "Задача закрыта" : "Недоступно")"/>
                <s class="ms-1 text-secondary" style="font-size: 15px;">
                    <i>@Subtask.Title</i>
                </s>
            }
        </div>
        <div class="col-md-1 d-flex justify-content-center">
            <ResponsibleSelection @bind-SelectedId="Subtask.Responsible" EditMode="isEditMode" Team="State.Model!.Team" />
        </div>
        <div class="col-md-1 d-flex">
            @if (!Disabled)
            {
                if (Subtask.Status != (int)Status.Closed)
                {
                    if (isEditMode)
                    {
                        <Button style="min-width: 31px;" Color="ButtonColor.Success" Outline="true" Size="Size.ExtraSmall"
                            Type="ButtonType.Submit" >
                            OK
                        </Button> 
                    }
                    else
                    {
                        <Dropdown Size="Size.ExtraSmall" AutoClose="true" >
                            <DropdownToggleButton Color="ButtonColor.Light">
                                <Icon Name="IconName.ThreeDots" />
                            </DropdownToggleButton>
                            <DropdownMenu>
                                <DropdownItem Disabled="HasEditingSubtask" @onclick="BlockOthers">
                                    Редактировать
                                </DropdownItem>
                                <DropdownItem @onclick="DeleteSubtask">
                                    Удалить
                                </DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    }
                }
                else
                {
                    <Tool IconName="IconName.X" IconColor="IconColor.Danger" TooltipTitle="Удалить" 
                        OnClick="DeleteSubtask" />
                }
            }
        </div>
    </div>
</EditForm>