@inherits KolComponentBase

@if (!_loading)
{
<div class="flex flex-col gap-2">
    <span class="text-sm font-bold mb-5">Фильтр</span>
    <div style="max-height: 350px;" class="overflow-auto">
        <div class="flex flex-col gap-1 mb-5">
            @foreach (var type in FeedMsgTypes.Types)
            {
                @RenderFeedType(type);
            }
        </div>
        <span class="font-bold">Скрытые проекты:</span>
    <FeedExcludedProjectsView FeedFilterService="_feedFilterService" ExcludedProjects="_feedSettings.ExcludedProjects" />
    </div>
    <div class="flex gap-3 justify-end">
        <FluentButton Appearance="Appearance.Lightweight" Type="ButtonType.Submit"
            @onclick="ResetSettings" >
            Сбросить настройки
        </FluentButton>
        <FluentButton BackgroundColor="var(--success)" Color="white"
            @onclick="OnApplyClick" >
            Сохранить
        </FluentButton>
    </div>
</div>
}

@code {
    private RenderFragment RenderFeedType(FeedMsgType type) =>
        @<div class="flex flex-col mouse-hover p-1" style="border-radius: 5px;" 
            @onclick="@(() => OnTypeCheckChanged(type.Type, _feedSettings.ExcludedItems.Contains(type.Type)))">
            @{
                var isChecked = !_feedSettings.ExcludedItems.Contains(type.Type);
            }
            <div class="flex items-center">
                <FluentCheckbox @bind-Value:get="isChecked"
                    @bind-Value:set="_ => OnTypeCheckChanged(type.Type, isChecked)" />
                <FluentSpacer Width="10" />
                <FluentIcon Value="type.Icon" Color="type.Color" />
                <FluentSpacer Width="5" />
                <span class="font-bold">@type.Name</span>
            </div>
            <div class="flex">
                <FluentSpacer Width="30" />
                <span class="text-sm" style="color: var(--info);">@type.Description</span>
            </div>
        </div>;
}