@using Domain.Enums

<Smooth Delay="TimeSpan.FromMilliseconds(500)">
    <div class="task-card @CssDeadline" @onclick="openModalAction" >
        <div class="container py-1 px-4 default-text" style="min-height: 150px;">
            <div class="row py-1 @CssMarginTitle">
                <div class="px-0 d-flex">
                    @if (Task.Priority == Domain.Enums.Priority.High)
                    {
                        <div >
                            <Tool Icon="@(new Icons.Filled.Size20.ArrowCircleUp())" Color="Color.Accent" 
                                TooltipTitle="Приоритет - Высокий" Style="margin-right: 5px;" />
                        </div>
                    }
                    <div class="fw-bold fs-6 max-height-100 title pre-wrap">@Task.Title</div>
                </div>
            </div>
            @if (Task.Description is { })
            {
                <div class="row fw-light max-height-100 title pre-wrap" >
                    @Task.Description
                </div>
            }
            @if (Task.Subtasks.Count > 0)
            {
                <div class="row py-1">
                    <div class="d-flex justify-content-end">
                        + @Task.Subtasks.Count подзадачи
                    </div>
                </div>
            }
            @if (Task.MilestoneId is { })
            {
                <div class="row py-1">
                    <div class="px-0">
                        <MilestoneLabel Milestone="@State.GetMilestone(Task.MilestoneId)" />
                    </div>
                </div>
            }
            @if (Task.Responsibles.Count > 0)
            {
                <div class="row py-1">
                    <div class="px-0">
                        <ResponsiblesView Responsibles="Task.Responsibles" ImageSize="25" ShowName="true" MaxCount="2" />
                    </div>
                </div>
            }
            @if (Task.Tags.Count > 0)
            {
                <div class="row py-1">
                    <div class="d-flex flex-wrap gap-1 px-0">
                        @foreach (var tag in Task.Tags)
                        {
                            <TaskTagLabel Tag="tag" Color="@TagColorGetter.GetColor(tag)" />
                        }
                    </div>
                </div>
            }
            @if (Task.Deadline is { })
            {
                <div class="row">
                    <div class="d-flex p-0 justify-content-end align-items-center">
                        @if (Task.IsDeadlineOut())
                        {
                            <Tool Icon="@(new Icons.Regular.Size16.Fire())" Color="Color.Error" 
                                TooltipTitle="@(GetDeadlineString("Срок истек - {0} {1} назад"))" />
                        }
                        else if (Task.IsSevenDaysDeadlineOut())
                        {
                            <Tool Icon="@(new Icons.Filled.Size16.Warning())" Color="Color.Warning"
                                TooltipTitle="@(GetDeadlineString("Крайний срок истечет через {0} {1}"))" />
                        }
                        <span class="small ms-2 @(Task.IsDeadlineOut() ? "text-danger" : "fw-lighter")" >
                            Крайний срок:
                            @Task.Deadline?.ToString("d MMM yyyy г.")
                        </span>
                    </div>
                </div>
            }
        </div>
    </div>
</Smooth>
