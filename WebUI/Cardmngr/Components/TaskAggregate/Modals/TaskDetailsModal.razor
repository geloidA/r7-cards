@using Onlyoffice.Api.Models
@using Onlyoffice.Api.Validations

@inherits AddEditModalBase<OnlyofficeTask, TaskUpdateData>

<Offcanvas @ref="currentModal" 
           Width="520" 
           Placement="MyOffcanvasPlacement.End" 
           Class="my-offcanvas my-offcanvas-right"
           OnClose="ShowCloseConfirm">
               
    <CascadingValue Value="Buffer" IsFixed >
        <FluentEditForm Model="Buffer" OnValidSubmit="SubmitAsync" @onkeydown="HandleKeyDown" >
            <FluentValidationValidator />
            <OffcanvasHeader Class="py-0 flex gap-2 items-center" Style="padding-top: 20px !important;">
                <AutoGrowTextArea Name="Title" Style="font-size: 20px; font-weight: 500;" ReadOnly="!CanEdit"
                                  @bind-Value="Buffer.Title" Class="p-0 w-full" />
                <TaskPriorityChanger Disabled="@(!CanEdit)" />
            </OffcanvasHeader>
            <FluentValidationMessage For="() => Buffer.Title" class="ms-3" />
            <OffcanvasBody Class="flex flex-col form-group gap-2">
                @if (Model is not null)
                {
                    <i style="font-size: 13px; margin-right: 5px;" class="flex justify-end">
                        Создатель: @Model.CreatedBy.DisplayName
                    </i>
                }
                <FluentDatePicker Name="StartDate" Placeholder="Не установленa"
                                  ReadOnly="!CanEdit" @bind-Value="Buffer.StartDate" Label="Дата начала:" />
                <FluentDatePicker Name="Deadline" Placeholder="Не установлен"
                                  ReadOnly="!CanEdit" @bind-Value="Buffer.Deadline" Label="Крайний срок:" />
                <FluentValidationMessage For="() => Buffer.Deadline" />
                <AutoGrowTextArea Name="Description" Resize="TextAreaResize.Vertical" Placeholder="Описание" Class="w-full"
                                  @bind-Value="Buffer.Description" ImmediateDelay="500" Immediate Spellcheck="true" ReadOnly="!CanEdit" />
                <CascadingValue Value="State" IsFixed="true">
                    <TaskResponsibles Disabled="!CanEdit" />
                    <TaskMilestone Disabled="!CanEdit" />
                    <TaskTagLabels TaskTags="TaskTags" OnlyofficeTask="Model"
                                   Disabled="@(!CanEdit)" IsAdd="IsAdd" />
                    @if (!IsAdd)
                    {
                        <CascadingValue Value="Model" IsFixed >
                            <TaskSubtasks />
                        </CascadingValue>
                    }
                </CascadingValue>
                <div class="flex justify-end select-none">
                    <div class="flex flex-row">
                        <FluentButton Type="ButtonType.Submit"
                                      Disabled="!CanEdit" Loading="submitting" >
                            @SubmitText
                        </FluentButton>
                        @if(!IsAdd)
                        {
                            <FluentButton Class="ms-2" OnClick="DeleteAsync" Disabled="!Model!.CanDelete || State.ReadOnly" >
                                Удалить
                            </FluentButton>
                        }
                    </div>
                </div>
            </OffcanvasBody>
        </FluentEditForm>
    </CascadingValue>
</Offcanvas>

@code {
    bool enterPressed;

    void HandleKeyDown(KeyboardEventArgs e)
    {
        enterPressed = e.Key == "Enter";
    }
}