@using Onlyoffice.Api.Models
@using Onlyoffice.Api.Validations

@inherits AddEditModalBase<OnlyofficeTask, TaskUpdateData>
@implements IDisposable

@using Offcanvas = Cardmngr.Components.Modals.MyBlazored.Offcanvas

@if (buffer is { })
{
    <Cardmngr.Components.Modals.MyBlazored.Offcanvas Width="520" Placement="MyOffcanvasPlacement.End" Class="my-offcanvas my-offcanvas-right"
        @ref="currentModal">
        <FluentEditForm Model="buffer" OnValidSubmit="SubmitAsync" @onkeydown="HandleKeyDown" >
            <FluentValidationValidator />
            <OffcanvasHeader Class="py-0 d-flex" Style="padding-top: 20px !important;">
                <FluentTextField style="font-size: 20px; font-weight: 500;" ReadOnly="!CanEdit"
                    @bind-Value="buffer.Title" class="p-0 w-100" />
            </OffcanvasHeader>
            <FluentValidationMessage For="() => buffer.Title" class="ms-3" />
            <OffcanvasBody Class="d-flex flex-column form-group gap-2">
                @if (Model is { })
                {
                    <i style="font-size: 13px; margin-right: 5px;" class="d-flex justify-content-end">
                        Создатель: @Model.CreatedBy.DisplayName
                    </i>
                }
                <TaskPriorityChanger Class="justify-content-end" Task="buffer" Disabled="@(!CanEdit)" />
                <FluentDatePicker Placeholder="Не установленa"
                    ReadOnly="!CanEdit" @bind-Value="buffer.StartDate" Label="Дата начала:" />
                <FluentDatePicker Placeholder="Не установлен"
                    ReadOnly="!CanEdit" @bind-Value="buffer.Deadline" Label="Крайний срок:" />
                <FluentValidationMessage For="() => buffer.Deadline" />
                <FluentTextArea Resize="TextAreaResize.Vertical" Placeholder="Описание" Class="w-100" Rows="6"
                    @bind-Value="buffer.Description" Spellcheck="true" ReadOnly="!CanEdit" />
                <CascadingValue Value="State" IsFixed="true">
                    <TaskResponsibles Task="buffer" Disabled="!CanEdit" />
                    <TaskMilestone Disabled="!CanEdit" Task="buffer" />
                    <TaskTagLabels TaskTags="TaskTags" OnlyofficeTask="Model"
                                   Disabled="@(!CanEdit)" IsAdd="IsAdd" />
                    @if (!IsAdd)
                    {
                        <CascadingValue Value="Model" IsFixed="true">
                            <TaskSubtasks />
                        </CascadingValue>
                    }
                </CascadingValue>
                <div class="d-flex justify-content-end">
                    <div class="d-flex flex-row">
                        <FluentButton Type="ButtonType.Submit"
                            Disabled="!CanEdit">
                            @SubmitText
                        </FluentButton>
                        @if(!IsAdd)
                        {
                            <FluentButton Class="ms-2" OnClick="DeleteAsync" Disabled="!Model!.CanDelete" >
                                Удалить
                            </FluentButton>
                        }
                    </div>
                </div>
            </OffcanvasBody>
        </FluentEditForm>
    </Cardmngr.Components.Modals.MyBlazored.Offcanvas>
}

@code {
    bool shiftEnter;

    void HandleKeyDown(KeyboardEventArgs e)
    {
        shiftEnter = e.Key == "Enter" && e.ShiftKey;
    }
}