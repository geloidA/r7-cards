@using Cardmngr.Application.Clients.SignalRHubClients

@inject AuthenticationStateProvider AuthenticationStateProvider

@if (State.Milestones.Count > 0)
{
    @foreach (var milestone in State.Milestones.OrderByMilestoneCriteria())
    {
        <div @key="milestone.Id" class="mt-2">
            <div class="d-flex align-items-center">
                <MilestoneLabel OnClick="() => ShowModal(milestone)" Milestone="milestone" />
                <FluentSpacer />
                <i class="d-flex flex-row" style="font-size: 11px;">
                    <span>@State.GetMilestoneStart(milestone).ToShortDateString()</span>
                    <span class="ms-1">-</span>
                    <span class="ms-1 @(milestone.IsDeadlineOut() ? "text-danger fw-bolder" : "")">
                        @milestone.Deadline.ToShortDateString()
                    </span>
                </i>
                <FluentSpacer Width="15" />
                <FluentBadge title="@(milestone.IsDeadlineOut() ? "Веха просрочена" : "Открытых задач")"
                    Appearance="@(milestone.IsDeadlineOut() ? Appearance.Neutral : Appearance.Accent)"
                    style="font-size: 11px;" >
                    @State.GetMilestoneTasks(milestone).Count(x => !x.IsClosed())
                </FluentBadge>
            </div>
        </div>        
    }
}
else
{
    <span>Список пуст</span>
}

@code {
    [Parameter] public IProjectState State { get; set; } = null!;

    [CascadingParameter(Name = "DetailsModal")] ModalOptions Options { get; set; } = null!;
    [CascadingParameter] IModalService Modal { get; set; } = null!;

    void ShowModal(Milestone milestone)
    {
        var parameters = new ModalParameters
        {
            { "Model", milestone },
            { "State", State }
        };

        Modal.Show<MilestoneDetailsModal>("", parameters, Options);
    }
}
