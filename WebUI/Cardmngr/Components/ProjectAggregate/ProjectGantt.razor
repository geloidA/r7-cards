@using Cardmngr.Domain.Entities.Base
@using KolBlazor.Components.Charts.Data
@using KolBlazor.Components.Charts.Gantt
@using KolBlazor.Components.TreeGrid.Columns

<div style="position: relative; height: 100%;">
    <GanttChart @ref="@_chart" 
        GetItems="@GetItems" 
        DayOffset="31"
        DetalizationLevel="@_detalizationLevel"
        KeySelector="@GetItemKey" >
        <Columns>
            <GridColumn TGridItem="GanttChartItem" Width="300px" >
                <HeaderTemplate>
                    Название
                </HeaderTemplate>
                <CellContent Context="item" >
                    @{
                        var entity = item.Data as ITitled ?? throw new ArgumentNullException(nameof(item.Data));
                    }
                    <span title="@entity.Title">@entity.Title</span>
                </CellContent>
            </GridColumn>
            <GridColumn TGridItem="GanttChartItem" Width="100px" >
                <HeaderTemplate>
                    Статус
                </HeaderTemplate>
                <CellContent Context="item" >
                    @if (item.Data is OnlyofficeTask task)
                    {
                        <TaskStatusView Statuses="Statuses" Task="task" />
                    }
                </CellContent>
            </GridColumn>            
            <GridColumn TGridItem="GanttChartItem" Width="200px" >
                <HeaderTemplate>
                    Период
                </HeaderTemplate>
                <CellContent Context="item" >
                    @if (item.Start != null || item.End != null)
                    {
                        <DateRangeView StartReadOnly EndReadOnly
                            Start="item.Start"
                            StartDateRender="RenderStart"
                            EndDateRender="date => RenderEnd((date, item.Data))"
                            End="item.End" />
                    }
                    else
                    {
                        <span>-</span>
                    }
                </CellContent>
            </GridColumn>
        </Columns>
        @* <ItemTemplate Context="item" >
            @if (item.Data is Milestone milestone)
            {
                <div>Веха: @milestone.Title</div>
            } 
            else if (item.Data is OnlyofficeTask task)
            {
                <div>Задача: @task.Title</div>
            }
        </ItemTemplate> *@
    </GanttChart>
    <div class="detalization-toggle">
        <FluentSelect Multiple="false"
                      TOption="GanttDetalizationLevel"
                      Width="100px;"
                      OptionText="GetDetalizationLevelText"
                      Items="Enum.GetValues<GanttDetalizationLevel>()"
                      SelectedOption="_detalizationLevel"
                      SelectedOptionChanged="OnDetalizationLevelChanged" >

        </FluentSelect>
    </div>
</div>

@code {
    private static RenderFragment<DateTime?> RenderStart = date =>
        @<div>
            @if (!date.HasValue)
            {
                <span class="italic text-info" title="Не установлен">???</span>
            }
            else
            {
                <span>@date.Value.ToShortYearString()</span>
            }
        </div>;

    private static RenderFragment<(DateTime? dt, object? data)> RenderEnd = (tuple) =>
        @<div>
            @{
                var dt = tuple.dt;
                var data = tuple.data;
            }
            @if (!dt.HasValue)
            {
                <span class="italic text-info" title="Не установлен">???</span>
            }
            else
            {
                var task = data as IOnlyofficeTask;   
                <span class="flex gap-1">
                    @if (task?.IsDeadlineOut() == true)
                    {
                        <FluentIcon Value="@(new Icons.Regular.Size16.Fire())" Color="Color.Error" title="Срок просрочен" />
                        <span class="text-error" >@dt.Value.ToShortYearString()</span>
                    }
                    else if (task?.IsSevenDaysDeadlineOut() == true)
                    {
                        <FluentIcon Value="@(new Icons.Filled.Size16.Warning())" 
                                    Color="Color.Warning"
                                    title="Срок скоро истечет" />
                        <span class="text-warning">@dt.Value.ToShortYearString()</span>
                    }
                    else
                    {
                        <span>@dt.Value.ToShortYearString()</span>
                    }
                </span>
            }
        </div>;
}
