@using KolBlazor.Components.Timeline

@inject KolTimelineJsInterop TimelineInterop

@inherits KolComponentBase
@implements IAsyncDisposable
<div class="user-select-none d-flex p-1" style="font-size: small;" >
    <FluentIcon Value="@(new Icons.Filled.Size16.Sparkle())" Color="Color.Accent"/>
    Вехи
    <FluentSwitch @bind-Value="collapsed" title="Развернуть / Свернуть"/>
</div>
<div class="d-flex @Class" >
    <KolTimeline Collapsed="!collapsed" MinWidth="1860" MaxWidth="25000" UncollapsedHeight="@(State.Milestones.Count * 36)" 
        ShowTodayLine="true" Class="scrollbar-none py-0" >
        <CascadingValue Value="milestoneTaskFilter" IsFixed="true">
            @foreach (var milestone in State.Milestones.OrderBy(x => x.Deadline))
            {
                <KolTimelineItem @key="milestone.Id" End="milestone.Deadline" Start="State.GetMilestoneStart(milestone)">
                    <TimelineMilestone Milestone="milestone" />
                </KolTimelineItem>
            }
        </CascadingValue>
    </KolTimeline>
</div>

@code {
    bool collapsed = false;
    [CascadingParameter] IProjectState State { get; set; } = null!;

    private bool firstFilterItemFlag = true;
    private readonly MilestoneTaskFilter milestoneTaskFilter = new();

    protected override void OnInitialized()
    {
        // Remove filter if empty
        milestoneTaskFilter.FilterChanged += () =>
        {
            if (!milestoneTaskFilter.Any())
            {
                State.TaskFilter.RemoveFilter(milestoneTaskFilter);
                firstFilterItemFlag = true;
            }
            else if (firstFilterItemFlag)
            {
                State.TaskFilter.AddFilter(milestoneTaskFilter);
                firstFilterItemFlag = false;
            }
        };

        State.MilestonesChanged += StateHasChanged;
        State.TasksChanged += StateHasChanged;
    }

    public ValueTask DisposeAsync()
    {
        return TimelineInterop.DisposeAsync();
    }
}