@using Milestone = Onlyoffice.Api.Models.MilestoneDto

@implements IDisposable

<Cardmngr.Components.Modals.MyBlazored.Offcanvas Class="my-offcanvas my-offcanvas-left" @ref="currentModal">
    <OffcanvasHeader Class="py-1 d-flex flex-column" Style="padding-top: 20px !important;" >
        <div class="d-flex flex-row align-self-start mb-2">
            <span>@State.Model!.Project!.Title</span>
            <Tooltip Title="Кол-во открытых задач">
                <Badge class="p-1 ms-1 user-select-none" Color="BadgeColor.Info">
                    @State.Model!.Tasks.Count
                </Badge>
            </Tooltip>
            @if (State.Model!.Project.IsPrivate)
            {
                <div class="ms-1">
                    <Tool IconName="IconName.LockFill" IconColor="IconColor.Warning" TooltipTitle="Приватный проект" />
                </div>
            }
        </div>            
        <div class="w-100 header"></div>
    </OffcanvasHeader>
    <div class="row mt-2 align-items-center px-3">
        <div class="col">
            <i class="text-secondary fw-light" style="font-size: 13px;">
                Создан - @State.Model!.Project!.Created.ToShortDateString()
            </i>
        </div>
        <div class="col d-flex justify-content-end">                
            @RenderStatus(GetDataByStatus(State.Model!.Project.Status))
        </div>
    </div>
    <OffcanvasBody Class="d-flex flex-column px-3">
        <WorkContainerDateProgress Start="@State.Start()" Deadline="@State.Deadline()"
            ClosedText="Закрыт" Closed="@(State.Model!.Project.Status == ProjectStatus.Closed)"
            ActiveWorks="@State.Model.Tasks.Count(x => !x.IsClosed())" TotalWorks="@State.Model.Tasks.Count" />
        <span class="mt-3">@State.Model!.Project.Description</span>
        <div class="px-2">
            <Card class="row mt-4 p-1 bg-shadow">
                <CardTitle class="mt-2">
                    <div class="row">
                        <div class="col-md-10">
                            <h6>
                                <Icon Name="IconName.Stars" />
                                Вехи
                                <Badge class="p-1" Color="BadgeColor.Info">@State.Model!.Milestones.Count</Badge>
                            </h6>
                        </div>
                        <div class="col-md-2">                                
                            <Tool Class="d-flex justify-content-center ms-2" Disabled="@(!State.Model!.Project.CanEdit)"
                                IconName="IconName.Plus" OnClick="ShowMilestoneCreation" TooltipTitle="Добавить веху" />
                        </div>
                    </div>
                </CardTitle>
                <CardBody class="m-0 user-select-none" style="max-height: 190px; overflow: auto;">
                    @if (currentModal is { })
                    {
                        <CascadingValue Value="ProjectHubClient" IsFixed="true">
                            <MilestoneList State="State" />
                        </CascadingValue>
                    }
                </CardBody>
            </Card>
            <Card class="row mt-4 p-1 bg-shadow">
                <CardTitle class="mt-2">
                    <h6>
                        <Icon Name="IconName.PeopleFill" />
                        Команда 
                        <Badge class="p-1" Color="BadgeColor.Info">@State.Model!.Team.Count</Badge>
                    </h6>
                </CardTitle>
                <CardBody class="m-0" style="max-height: 255px; overflow: auto;">
                    <UserList Users="@State.Model!.Team" />
                </CardBody>
            </Card>
        </div>
        <div class="mt-4 d-flex align-items-center ">
            <h6 class="col mt-1">
                <Icon Name="IconName.PersonFill" />
                Менеджер проекта
            </h6>
            <UserBadge User="@State.Model!.Project.Responsible" />
        </div>
    </OffcanvasBody>
</Cardmngr.Components.Modals.MyBlazored.Offcanvas>

@code {
    private static RenderFragment<StatusData> RenderStatus => data =>
        @<Badge Color="data.BadgeColor" class="user-select-none">
            <div class="d-flex align-items-center" >
                <span style="font-size: small;">@data.Title</span>
                <Icon class="ms-1 d-flex" Name="data.IconName" />
            </div>
        </Badge>;
}
