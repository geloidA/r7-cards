@page "/"

@inherits AuthorizedPage

@inject IProjectClient ProjectClient
@inject IJSRuntime JSRuntime
@inject IProjectFollowChecker ProjectFollowChecker

<PageTitle>Р7 Карточки</PageTitle>

<AuthorizeView>
    <div class="h-100 w-100 d-flex" >

        <div class="projects-view">
            <UserProjectsView Style="width: 100%;" Class="fs-6" UserProjects="userProjects"
                MaxHeight="500" />
        </div>
        <FluentSpacer Width="200"/>

        <div @ref="feed" id="feed-content" class="d-flex flex-column p-3 h-100 overflow-auto" style="width: 80%;">
            <h3 class="fw-bold">Лента</h3>
            <div class="w-100 d-flex gap-3">
                <div style="width: 60%;" >
                    <FeedView />
                    <AppVersion />
                </div>
                <div class="d-flex flex-column gap-2" style="width: 40%;">
                    <FeatureCard Text="Проекты" Desc="Поиск в проектах"
                        Icon="@(new Icons.Regular.Size20.Library())" Href="all-projects" />
                    <FeatureCard Text="Отчеты" Desc="Создание отчетов по проектам" Href="reports"
                        Icon="@(new Icons.Regular.Size20.DataBarVerticalAscending())" />
                    <FeatureCard Text="Пожелания и предложения"
                        Icon="@(new Icons.Regular.Size20.Lightbulb())" Href="feedback-board" />
                </div>
            </div>
        </div>

        <FluentButton 
            Id="backtotop" 
            class="position-absolute" 
            style="right: 0; bottom: 0; margin-bottom: 60px; margin-right: 30px; display: none;"
            @onclick="BackToTopAsync"
            IconEnd="@(new Icons.Regular.Size20.ArrowUp())" 
            Appearance="Appearance.Lightweight" />
    </div>
</AuthorizeView>

@code {
    ElementReference feed;
    IJSObjectReference? module;
    private List<Project>? userProjects;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (IsAuthenticated)
        {
            userProjects = await ProjectClient
                .GetSelfProjectsAsync()
                .OrderByDescending(x => ProjectFollowChecker.IsFollow(x.Id))
                .ToListAsync();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", 
                "/js/GeneratedJS/backtotop.js");
            await module.InvokeVoidAsync("registerHandlers", "feed-content", "backtotop");
        }
    }

    async Task BackToTopAsync()
    {
        await JSRuntime.InvokeVoidAsync("scrollToPosition", feed, 0, 150);
    }
}