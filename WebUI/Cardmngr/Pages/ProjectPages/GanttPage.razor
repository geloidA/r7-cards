@page "/project/gantt"

@using Cardmngr.Components.ProjectAggregate.Components
@using Cardmngr.Components.ProjectAggregate.Filter
@using Cardmngr.Exceptions
@using Cardmngr.Shared.Utils.Filter
@using KolBlazor.Components.Charts.Data

@inherits ProjectPage

<PageTitle>Проект</PageTitle>

@if (ProjectId is not null)
{
    <MutableProjectState @ref="@_projectState" Id="ProjectId.Value" AutoRefresh="false" >
        <ProjectStateNotifier />
        <div class="flex flex-col h-full p-3">
            <div class="mb-2">
                <div class="flex gap-2 items-center">
                    <OpenTaskStatusSwitcher />
                    <FluentSpacer />
                    <ProjectTextFieldFilterTool />
                    <ProjectOptions />
                </div>
            </div>
            <Smooth ShowOnFirstRender Style="height: calc(100% - 32px);" >
                <ProjectGantt GetItems="GetItems" Statuses="_projectState.Statuses" />
            </Smooth>
        </div>
    </MutableProjectState>
}

@code {

    private IFilterableProjectState _projectState = null!;

    private IEnumerable<GanttChartItem> GetItems()
    {
        var allTasks = _projectState.FilteredTasks();

        var milestoneTasks = _projectState.Milestones
            .Select(milestone => 
            {
                return new GanttChartItem
                {
                    Data = milestone,
                    Start = _projectState.GetMilestoneStart(milestone),
                    End = milestone.Deadline,
                    Children = _projectState
                        .GetMilestoneTasks(milestone)
                        .Filter(_projectState.TaskFilter)
                        .Select(GetTaskGanttItem)
                        .ToList()
                };
            });

        if (_projectState.TaskFilter.Filters.Any())
        {
            milestoneTasks = milestoneTasks.Where(x => x.Children.Any());
        }

        var tasks = allTasks
            .Where(t => !t.MilestoneId.HasValue)
            .Select(GetTaskGanttItem);

        return milestoneTasks
            .Concat(tasks)
            .OrderBy(x => x.Start);
    }

    private static GanttChartItem GetTaskGanttItem(OnlyofficeTask task)
    {
        return new GanttChartItem
        {
            Data = task,
            Start = task.StartDate ?? task.Created,
            End = task.GetSmartDeadline()
        };
    }
}