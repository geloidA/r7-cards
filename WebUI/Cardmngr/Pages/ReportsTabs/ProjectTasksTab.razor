@using Cardmngr.Application
@using Cardmngr.Application.Clients.People
@using Cardmngr.Application.Clients.TaskClient

@inject IProjectClient ProjectClient
@inject IPeopleClient PeopleClient
@inject ITaskClient TaskClient
@inject ITaskStatusClient TaskStatusClient
@inject IServiceProvider ServiceProvider
@inject IToastService ToastService

<div class="flex flex-wrap">
    <div class="w-1/2">
        <h4>Задачи проектов</h4>
        <p>Отчет <i>'Задачи проекта'</i> отобразит список задач, сгруппированных по проекту и вехе, с которыми они связаны.</p>
        <p>Чтобы посмотреть список всех задач во всех ваших проектах, сразу нажмите <i>'Сгенерировать отчет'.</i></p>
        <p>Настройка интервалов начала и крайнего срока позволит сделать выборку интересующих вас задач, входящих в определенные временные границы.</p>
        <p>Пример отчета:</p>
        <img src="images/project-tasks-report-example.png" class="mb-2" width="800" style="border-radius: 10px; opacity: 0.8; box-shadow: 0 0 10px 0 rgba(0,0,0,0.5);" alt=""/>
    </div>
    <div class="w-1/2">
        <FluentCard AreaRestricted="false"
            style="background-color: var(--neutral-layer-3); box-shadow: none; border: none;">
            <FluentEditForm Model="reportRequest" >
                <div class="flex flex-col">
                    <div class="flex flex-col gap-3">
                        <FluentAutocomplete Placeholder="Все"
                            OptionText="@(p => p.Title)" Label="Проект:"
                            OnOptionsSearch="OnProjectSearch" AutoComplete="off" style="max-width: 500px;"
                            TOption="Project" MaximumOptionsSearch="100"
                            @bind-SelectedOptions="reportRequest.Projects"
                            IconSearch="@(new Icons.Regular.Size20.ProjectionScreen())" >

                            <OptionTemplate Context="project">
                                <span title="@project.Title" 
                                    style="max-width: 450px;"
                                    class="ellipsis-truncate">@project.Title</span>
                            </OptionTemplate>

                        </FluentAutocomplete>

                        <FluentAutocomplete IconSearch="@(new Icons.Regular.Size20.PersonLightbulb())"
                            TOption="UserInfo" Placeholder="Все" AutoComplete="off"
                            @bind-SelectedOptions="reportRequest.Creators"
                            MaximumOptionsSearch="100" Label="Автор:" style="max-width: 500px;"
                            OptionText="@(u => u.DisplayName)"
                            OnOptionsSearch="OnUserSearch" />

                        <FluentAutocomplete IconSearch="@(new Icons.Regular.Size20.Person())"
                            TOption="UserInfo" Placeholder="Все" AutoComplete="off"
                            @bind-SelectedOptions="reportRequest.Responsibles"
                            MaximumOptionsSearch="100" Label="Ответственный:"
                            OptionText="@(u => u.DisplayName)" style="max-width: 500px;"
                            OnOptionsSearch="OnUserSearch" />
                    </div>
                    <div class="flex flex-col mt-3 gap-3">
                        <IntervalPicker Label="Интервал по началу задачи:"
                            @bind-Start="reportRequest.StartDateRange.Start" 
                            @bind-End="reportRequest.StartDateRange.End" />

                        <IntervalPicker Disabled="reportRequest.OnlyDeadline" Label="Интервал по крайнему сроку:"
                            @bind-Start="reportRequest.DeadlineRange.Start" 
                            @bind-End="reportRequest.DeadlineRange.End" />

                        <FluentCheckbox Label="Только просроченные"
                                @bind-Value="reportRequest.OnlyDeadline" />

                        <FluentCombobox 
                            Items="statusTypes"
                            Disabled="reportRequest.OnlyDeadline"
                            OptionText="s => s.GetDesc()"
                            Label="Статус задач" style="max-width: 500px;" 
                            OptionDisabled="s => reportRequest.OnlyDeadline"
                            @bind-SelectedOption="reportRequest.TaskStatusType" />
                    </div>
                </div>
            </FluentEditForm>
            <div class="flex mt-4">
                <FluentSpacer />
                <FluentButton IconStart="@(new Icons.Filled.Size16.ArrowDownload())" 
                    Loading="generating" Appearance="Appearance.Stealth" @onclick="async () => await GenerateReport().ConfigureAwait(false)" >
                    Сгенерировать отчет
                </FluentButton>
            </div>
        </FluentCard>
    </div>
</div>
