@page "/project/{ProjectId:int}"

@implements IDisposable

@using Onlyoffice.Api.Models
@using Task = System.Threading.Tasks.Task

@inherits AuthorizedPage

@inject IProjectApi ProjectApi

<div class="d-flex flex-column position-relative mb-5" style="flex: auto !important;">
    @if (model is { })
    {
        <ProjectMilestones Project="model" Class="mb-2" />
    }
    <div class="d-flex flex-column ms-3" style="flex: auto !important; white-space: nowrap !important; overflow-x: auto;">
        @if (model is { })
        {
            <CascadingValue Value="model.Milestones" IsFixed="true" >
                <StatusColumnsView Model="model.StatusColumns" />
            </CascadingValue>
        }
    </div>
</div>

@code {
    private ProjectModel? model;

    [Parameter] public int? ProjectId { get; set; }
    [CascadingParameter] HeaderTitle HeaderTitle { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        if (ProjectId.HasValue && ProjectId != null && ProjectId != model?.Id)
        {
            var project = ProjectApi.GetProjectByIdAsync(ProjectId.Value);
            var tasks = ProjectApi.GetFiltredTasksAsync(FilterTasksBuilder.Instance.WithProjectId(ProjectId.Value)).ToListAsync();
            var statuses = ProjectApi.GetAllTaskStatusesAsync().ToListAsync();
            var milestones = ProjectApi.GetMilestonesByProjectIdAsync(ProjectId.Value).ToListAsync();
            var team = ProjectApi.GetProjectTeamAsync(ProjectId.Value).ToListAsync();

            model = new ProjectModel(await project, await tasks, await statuses, await milestones, await team);

            model.ModelChanged += Refresh;

            HeaderTitle.Content = GetTitleContent(model.Title);
        }
    }

    private RenderFragment<string> GetTitleContent = title => 
        @<div class="fw-bold">
            @title
        </div>;

    private void Refresh() => StateHasChanged();

    public void Dispose()
    {
        HeaderTitle.Content = null;
    }
}