
<Card>
    <CardBody>
        <div class="d-flex flex-row align-items-center">
            Приоритет -
            @if (Task.Priority == TaskPriority.High)
            {
                <i class="ms-1 text-primary">Высокий</i>
                <Icon class="ms-1" Name="IconName.ArrowUpCircleFill" Size="IconSize.x5" Color="IconColor.Primary"/>
            }
            else
            {
                <i class="ms-1 text-secondary">Обычный</i>
            }
            <div class="col d-flex justify-content-end">
                <Tool IconName="IconName.ArrowDownUp" TooltipPlacement="TooltipPlacement.Top"
                    Disabled="Disabled"
                    TooltipTitle="Изменить" 
                    OnClick="() => Task.Priority = Task.Priority == TaskPriority.High 
                        ? TaskPriority.Regular 
                        : TaskPriority.High"/>
            </div>
        </div>
        <div class="mt-1">
            Создана:
            <span class="small ms-2">@Task.Created.ToString("d MMM yyyy г., HH:mm")</span>
            <i class="fw-light">
                - @Task.CreatedBy?.DisplayName
            </i>
        </div>
        <div class="mt-1">
            Обновлено:
            <span class="small ms-2">@Task.Updated.ToString("d MMM yyyy г., HH:mm")</span>
        </div>
        <div class="mt-1">
            <DateChanger Title="Дата начала:" EmptyText="Не установлена" Disabled="Disabled"
                @bind-Date="Task.StartDate" />
        </div>
        <div class="mt-1">
            <DateChanger Title="Крайний срок:" EmptyText="Не установлен" Disabled="Disabled"
                @bind-Date="Task.Deadline" />
        </div>
    </CardBody>
</Card>

@code {
    [Parameter] public TaskModel Task { get; set; } = null!;
    [Parameter] public bool Disabled { get; set; }
}
