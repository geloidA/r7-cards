@using System.Collections.ObjectModel

<Card >
    <CardBody class="d-flex flex-column" style="overflow-y: scroll; max-height: 200px;">
        <CardTitle>
            <div class="row d-flex align-items-center">
                <div class="col-md-11"> 
                    <Icon Name="IconName.PeopleFill" />
                    Ответственные
                </div>
                <div class="col-md-1 d-flex justify-content-end">
                    <Tool Disabled="!Task.CanEdit" IconName="IconName.Pencil" IconSize="IconSize.x6"
                        TooltipTitle="Изменить" OnClick="ShowResponsibleSelectionModal" />
                </div>
            </div>
        </CardTitle>
        <UserList Users="Task.Responsibles" />
    </CardBody>
</Card>


@code {
    [CascadingParameter(Name = "MiddleModal")] ModalOptions ModalOptions { get; set; } = null!;

    [CascadingParameter] IModalService Modal { get; set; } = default!;

    [Parameter] public TaskModel Task { get; set; } = null!;

    private async Task ShowResponsibleSelectionModal()
    {
        var parameters = new ModalParameters
        {
            { "SelectedIds", Task.Responsibles!.Select(x => x.Id).ToList() },
            { "Project", Task.ProjectOwner }
        };

        var result = await Modal.Show<ResponsiblesSelectionModal>("Выберите ответственных", parameters, ModalOptions).Result;

        if (result.Confirmed)
        {
            Task.Responsibles = new ObservableCollection<Onlyoffice.Api.Models.IUser>((IEnumerable<Onlyoffice.Api.Models.IUser>)result.Data!);
        }
    }
}