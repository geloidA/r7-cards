@* @using BlazorCards
@using Cardmngr.Utils

@implements IDisposable

@inject IJSRuntime JSRuntime

<Offcanvas @ref="offcanvas" Placement="Placement.End" />

<div class="viewport workarea" @onmousedown="@StartPan"
    @onmousedown:preventDefault>
    <div id="workarea" style="transform-origin:0% 0%;">
        <CascadingValue IsFixed="true" Value="offcanvas" >
            <CascadingValue Value="lastDraggingCard" >
                @foreach (var board in Boards)
                {
                    <BoardView Board="board" @key="board"  />
                }
            </CascadingValue>
        </CascadingValue>
    </div>
</div>


@code {
    BlazorCards.Card? lastDraggingCard;
    Offcanvas offcanvas = null!;
    [Parameter] public IEnumerable<Board> Boards { get; set; } = null!;

    private Vector2 clickStartPos;

    private async Task StartPan(MouseEventArgs e)
    {
        clickStartPos = e.GetClientPos();
        await JSRuntime.InvokeVoidAsync("panzoom.startPan");
    }
} *@