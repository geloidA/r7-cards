@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationState

<Cardmngr.Components.Modals.MyBlazored.Offcanvas @ref="currentModal" Class="my-offcanvas my-offcanvas-left" Style="max-width: 300px;">
    <OffcanvasHeader>
        <a class="text-dark fw-bold fs-4 ms-3" href="/">
            <Icon Name="IconName.Stack" />
            Карточки
        </a>
    </OffcanvasHeader>
    <OffcanvasBody Class="d-flex flex-column">
        <div class="container h-100">
            <Card class="bg-shadow" >
                <CardTitle>
                    <h6>
                        <Icon Name="IconName.JournalBookmarkFill" />
                        Мои проекты
                    </h6>
                </CardTitle>
                <CardBody class="p-1 overflow-auto" style="max-height: 600px;">
                    @if (UserProjects is { } && UserProjects.Any())
                    {
                        @foreach (var proj in UserProjects)
                        {
                            <div class="py-1">
                                <ProjectReference Project="proj" />
                            </div>
                        }
                    }
                    else
                    {
                        <span>Вы не состоите ни в одном из проектов</span>
                    }
                </CardBody>
            </Card>
            <footer class="footer d-flex gradient-bg-vertical" >
                <div class="mx-4 my-4">
                    <Tool IconName="IconName.Send" TooltipTitle="Отправить обратную связь" OnClick=@(() => NavigationManager.NavigateTo("feedback-board")) />
                    <div class="mt-3" @onmouseenter="() => logoutHover = true" @onmouseout="() => logoutHover = false">
                        <Tool IconName="@(logoutHover ? IconName.DoorOpenFill : IconName.DoorClosedFill)" 
                            TooltipTitle="Выйти" IconColor="IconColor.Dark" IconSize="IconSize.x5"
                            OnClick="LogoutAsync" />
                    </div>
                </div>
            </footer>
        </div>
    </OffcanvasBody>
</Cardmngr.Components.Modals.MyBlazored.Offcanvas>

@code {
    private Cardmngr.Components.Modals.MyBlazored.Offcanvas currentModal = null!;
    private bool logoutHover;

    [CascadingParameter(Name = "MiddleModal")] public ModalOptions Options { get; set; } = null!;
    [CascadingParameter] public IModalService Modal { get; set; } = null!;

    private async Task LogoutAsync()
    {
        if (AuthenticationState is { })
        {            
            AuthenticationState.ToCookieProvider().ClearAuthInfo();
            await LocalStorage.RemoveItemAsync("isauthenticated");
            NavigationManager.NavigateTo("login");
        }
    }

    [Parameter] public List<Onlyoffice.Api.Models.Project> UserProjects { get; set; } = null!;
}
